[tox]
isolated_build = true
envlist=py311,checks,test
; env_list =
;     py311
;     checks
;     test

[testenv]
allowlist_externals = pytest,isort,black
setenv =
    PYTHONPATH = {env:PYTHONPATH}{:}{toxinidir}
    ENV=test
deps =
    -r requirements.txt

[testenv:checks]
description = code checks: run with `tox -e checks`
commands =
    isort src tests --profile black --check
    black src tests -l 120 --check

[testenv:test]
description = tests: run with `tox -e test`
commands = pytest -v
docker = postgres

[docker:postgres]
image = postgres:13.4-alpine
environment =
    POSTGRES_DB=test_items_db
    POSTGRES_USER=admin
    POSTGRES_PASSWORD=admin
    POSTGRES_HOST_AUTH_METHOD=trust
ports =
    1010:5432/tcp
healthcheck_cmd = pg_isready
healthcheck_timeout = 5
healthcheck_retries = 5
healthcheck_interval = 5
healthcheck_start_period = 1

; ; volumes =
; ;     bind:rw:./db/data:/var/lib/postgresql/data
